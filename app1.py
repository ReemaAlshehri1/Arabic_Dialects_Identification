# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12oaFT1rfdI6bvSnLRGdpL8TIpFt2EgSU
"""

# app.py
import torch
import gradio as gr
from transformers import AutoTokenizer
from peft import PeftModel, PeftConfig
from arabert.preprocess import ArabertPreprocessor

# Load model
peft_model_path = "arabert-dialect-lora"  # Folder with your fine-tuned model
config = PeftConfig.from_pretrained(peft_model_path)
base_model = AutoModelForSequenceClassification.from_pretrained(
    config.base_model_name_or_path,
    num_labels=6
)
model = PeftModel.from_pretrained(base_model, peft_model_path)
tokenizer = AutoTokenizer.from_pretrained(peft_model_path)

# Arabic preprocessor
arabert_prep = ArabertPreprocessor(model_name="aubmindlab/bert-base-arabertv2")

# Label map
label_map = {0: "msa", 1: "egypt", 2: "gulf", 3: "levant", 4: "magreb", 5: "sudan"}

# Cleaning function
def manual_clean(text):
  text=str(text)
  text=re.sub(r'@[\w_]+', ' ', text)
  text=re.sub(r'http\S+', ' ', text)
  text = re.sub(r'#\S+', '', text)       # remove hashtags
  text = re.sub(r'[a-zA-Z]+', ' ', text)# remove English letters
  text = re.sub(r'\d+', ' ', text)       # remove digits
  text = re.sub(r'[^\u0600-\u06FF\s]', ' ', text)  # keep Arabic only
  text = re.sub(r'\s+', ' ', text).strip()
  return text

# Prediction function
def predict_dialect(text):
    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
    model.to(device)
    text = manual_clean(text)
    text = arabert_prep.preprocess(text)
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True).to(device)
    with torch.no_grad():
        outputs = model(**inputs)
        probs = torch.softmax(outputs.logits, dim=1)
        pred_class = torch.argmax(probs, dim=1).item()
        confidence = torch.max(probs).item()
    return label_map[pred_class], f"{confidence:.2%}"

# Gradio app
gr.Interface(
    fn=predict_dialect,
    inputs=gr.Textbox(label="Enter Arabic Sentence"),
    outputs=[gr.Label(label="Predicted Dialect"), gr.Label(label="Confidence")],
    title="Arabic Dialect Classifier"
).launch(share=True)